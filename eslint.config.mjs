import globals from "globals";
import tseslint from "typescript-eslint";

export default [
  {files: ["**/*.{js,mjs,cjs,ts}"]},
  {languageOptions: { globals: globals.browser }},
  ...tseslint.configs.recommended,
  // {
  //   rules: {
  //     "no-undef": "error",
  //     "no-unused-vars": "error",
  //     "no-var": "error",
  //     "prefer-const": "error",
  //     "prefer-destructuring": "error",
  //     "prefer-template": "error",
  //     "quotes": ["error", "double"],
  //     "semi": ["error", "always"],
  //     "no-console": "error",
  //     "no-debugger": "error",
  //     "no-alert": "error",
  //     "no-constant-condition": "error",
  //     "no-else-return": "error",
  //     "no-empty": "error",
  //     "no-eval": "error",
  //     "no-extra-bind": "error",
  //     "no-extra-label": "error",
  //     "no-implicit-coercion": "error",
  //     "no-implicit-globals": "error",
  //     "no-implied-eval": "error",
  //     "no-invalid-this": "error",
  //     "no-iterator": "error",
  //     "no-lone-blocks": "error",
  //     "no-loop-func": "error",
  //     "no-multi-spaces": "error",
  //     "no-multi-str": "error",
  //     "no-new": "error",
  //     "no-new-func": "error",
  //     "no-new-wrappers": "error",
  //     "no-octal": "error",
  //     "no-octal-escape": "error",
  //     "no-param-reassign": "error",
  //     "no-proto": "error",
  //     "no-redeclare": "error",
  //     "no-restricted-properties": "error",
  //     "no-return-assign": "error",
  //     "no-return-await": "error",
  //     "no-script-url": "error",
  //     "no-self-assign": "error",
  //     "no-self-compare": "error",
  //     "no-sequences": "error",
  //     "no-throw-literal": "error",
  //     "no-unmodified-loop-condition": "error",
  //     "no-unused-expressions": "error",
  //     "no-useless-call": "error",
  //     "no-useless-concat": "error",
  //     "no-useless-escape": "error",
  //     "no-useless-return": "error",
  //     "no-void": "error",
  //     "no-warning-comments": "error",
  //     "no-with": "error",
  //     "prefer-promise-reject-errors": "error",
  //   }
  // }
];